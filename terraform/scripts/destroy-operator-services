#!/usr/bin/env bash

SCRIPT_DIR=$(cd $(dirname $0); pwd -P)

function join_by { local IFS="$1"; shift; echo "$*"; }

. ${SCRIPT_DIR}/../settings/environment.tfvars

if [[ -n "${cluster_name}" ]]; then
  CLUSTER_NAME="${cluster_name}"
elif [[ -n "${name_prefix}" ]]; then
  CLUSTER_NAME="${name_prefix}-cluster"
else
  CLUSTER_NAME="${resource_group_name}-cluster"
fi

echo "Looking for services in cluster: ${CLUSTER_NAME}"

SERVICES=$(kubectl get services.ibmcloud --all-namespaces -o jsonpath='{range .items[*]}{.metadata.namespace}{"/"}{.metadata.name}{"\n"}{end}')

FILTER=$(join_by "|" "$@")
FORCE=$(echo "$@" | grep -- "--force")

if [[ -n "${FILTER}" ]]; then
    FILTERED_LIST=$(echo "${SERVICES}" | grep -E -v -- "${FILTER}")
else
    FILTERED_LIST="${SERVICES}"
fi

if [[ -z "${FILTERED_LIST}" ]]; then
    echo "No services found"
    exit 0
fi

echo "The following services (and any associated bindings) will be deleted:"
echo "${FILTERED_LIST}" | while read service; do
    echo " - ${service}"
done

if [[ -z "${FILTER}" ]]; then
    echo ""
    echo "Note: if you want to exclude any of these services, pass part of the name as an argument (e.g. destroy-services.sh postgres)"
fi

if [[ -z "${FORCE}" ]]; then
    echo ""
    echo -n "Do you want to continue? [Y/n] "
    read input

    if [[ -z "${input}" ]] || [[ "${input}" =~ [yY] ]]; then
        echo -n ""
    else
        exit 0
    fi
fi

echo "${FILTERED_LIST}" | while read -r service; do
    service_namespace=$(echo "${service}" | sed -E "s/(.*)\/(.*)/\1/g")
    service_name=$(echo "${service}" | sed -E "s/(.*)\/(.*)/\2/g")

    kubectl get binding.ibmcloud --all-namespaces -o jsonpath="{range .items[?(@.spec.serviceName == \"${service_name}\")]}{.metadata.namespace}{\"/\"}{.metadata.name}{\"\n\"}{end}" | while read -r binding; do
      binding_namespace=$(echo "${binding}" | sed -E "s/(.*)\/(.*)/\1/g")
      binding_name=$(echo "${binding}" | sed -E "s/(.*)\/(.*)/\2/g")

      kubectl delete "binding.ibmcloud/${binding_name}" -n "${binding_namespace}"
    done

    kubectl delete "service.ibmcloud/${service_name}" -n "${service_namespace}"
done
